apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ .Values.clusterName }}
  namespace: {{ .Release.Namespace }}
spec:
  kafka:
    replicas: 1
    logging:
      type: inline
      loggers:
        kafka.root.logger.level: "DEBUG"
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: scram-sha-512
      - name: external
        port: 9094
        type: ingress
        tls: true
        authentication:
          type: scram-sha-512
        configuration:
          class: nginx
          bootstrap:
            host: {{ .Values.bootstrapHost }}
          brokers:
          - broker: 0
            host: {{ .Values.brokersHost }}
    resources:
      requests:
        memory: 1Gi
        cpu: 500m
      limits:
        memory: 1.2Gi
        cpu: 1000m
    jvmOptions:
      -Xms: 750m
      -Xmx: 850m
    authorization:
      type: simple
    storage:
      deleteClaim: true
      size: 10Gi
      type: persistent-claim
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      default.replication.factor: 1
      log.message.format.version: "2.1"
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
  zookeeper:
    replicas: 1
    jvmOptions:
      -Xms: 256m
      -Xmx: 256m
    livenessProbe:
      initialDelaySeconds: 60
      timeoutSeconds: 5
    readinessProbe:
      initialDelaySeconds: 60
      timeoutSeconds: 5
    storage:
      type: persistent-claim
      size: 10Gi
      deleteClaim: true
    resources:
      requests:
        memory: 384Mi
        cpu: 200m
      limits:
        memory: 384Mi
        cpu: 1000m
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"