apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMapName }}
  namespace: {{ .Release.Namespace }}

data:
  postgres.conf: |

    listen_addresses = '*'
    log_timezone = 'UTC'
    datestyle = 'iso, mdy'
    timezone = 'UTC'
    lc_messages = 'en_US.utf8'
    lc_monetary = 'en_US.utf8'
    lc_numeric = 'en_US.utf8'
    lc_time = 'en_US.utf8'
    default_text_search_config = 'pg_catalog.english'
    default_transaction_read_only = 'off'
    max_connections = {{ .Values.max_connections }}
    shared_buffers = 512MB
    effective_cache_size = 1536MB
    maintenance_work_mem = 256MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 500
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 6553kB
    wal_level = {{ .Values.wal_level }}
    min_wal_size = 4GB
    max_wal_size = 16GB
    max_worker_processes = 4
    max_parallel_workers = 4
    max_parallel_workers_per_gather = 2
    max_parallel_maintenance_workers = 2
    logging_collector = {{ .Values.logging_collector  }}
    log_statement = {{ .Values.log_statement  }}

    shared_preload_libraries = 'pg_stat_statements'

    password_encryption = md5	# scram-sha-256 or md5

  primary_init_script.sh: |
    #!/bin/bash
    # When testing the script, you should disable `set -e` for easier debugging.
    # Otherwise, the script would exit without leaving any related eroor logs in the PG container
    set -e

    dt=$(date '+%d/%m/%Y %H:%M:%S')
    echo "$dt - Running init script the 1st time Primary PostgreSql container is created..."

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
    CREATE DATABASE "$DB_NAME";
    CREATE USER "$DB_USER" WITH ENCRYPTED PASSWORD '$DB_PASSWORD';
    EOSQL


    echo "Granting user privileges"
    psql -v ON_ERROR_STOP=0 --username "$POSTGRES_USER" --dbname "$DB_NAME" <<-EOSQL
    GRANT CONNECT ON DATABASE "$DB_NAME" to "$DB_USER";
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO "$DB_USER";
    GRANT USAGE ON SCHEMA public to "$DB_USER";
    GRANT SELECT, UPDATE, USAGE ON ALL SEQUENCES IN SCHEMA public TO "$DB_USER";
    GRANT SELECT, UPDATE, INSERT, DELETE,TRUNCATE ON ALL TABLES IN SCHEMA public TO "$DB_USER";
    EOSQL

    echo "$dt - Init script is completed"
